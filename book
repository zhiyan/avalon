语言层面\"包\"是个非常非常重要的功能，非常非常重要，而这是前端代码组织得没有规则，
不同人不同风格的组织方式，不同js框架和相应组件各自为阵的根本原因。requirejs的出现是有划时代意义的。


火不火的我不关心，什么东西称手用什么。比如流行的backbone,less,requirejs,nodejs,coffee script,
没有一个我觉得有需求可以帮上忙的。除了requires,是因为我有更好的解决方案而放弃使用，
其它的都没有特别吸引我的亮点。顺带说一下，我觉得requirejs是继jQuery之后，在前端界发生的最有意义的事情。


用不用框架？如果你有足够的资源和经验去解决整个前端stack的所有问题，当然可以不用；但大多数人没有。选什么框架？笼统了说，
选一个覆盖了你希望别人替你解决的问题的框架，前提是去了解每个框架解决的是什么问题。最后流行不流行不是关键，
但流行的框架bug别人帮你修了的可能性更大。

1. 不是每个团队都有资源做自己的基础架构；2. 大多对一个问题研究得很深的人都会多少有些 NIH 症状 （Not invented here）
就是看别人做的东西不顺眼，总觉得要自己写才好

编程中对函数的熟记是一件必需的事情，但是你应当花费更多的时间在学习做事的方法上， 比如说创建一个数据库连接， 
如何产生RSS源等，然后是关注于代码是如何实现的。 
学习做事的正确方法远比死记硬背重要。 正所谓 人有多大懒，才有多大闲。
http://lab.lepture.com/selection.js/
http://www.cnblogs.com/chyingp/p/requirejs-path-resolve.html
http://blog.qivhou.com/translation/2014/04/03/Understanding-MVVM-A-Guide-For-JavaScript-Developers/

http://www.infoq.com/cn/articles/nodejsv0.12-execsync-a-synchronous-api-for-child-processes

MVC, MVP, MVVM比较以及区别(上)
http://www.cnblogs.com/JustRun1983/p/3679827.html
https://medium.com/code-adventures/174f1fe66127
CSS文件动态加载（续）—— 残酷的真相 
http://www.cnblogs.com/chyingp/archive/2013/03/03/how-to-judge-if-stylesheet-loaded-successfully.html

http://www.cnblogs.com/chyingp/p/requirejs-almond-introduction.html

es6 的实现
https://github.com/medikoo/plain-promise/blob/master/index.js